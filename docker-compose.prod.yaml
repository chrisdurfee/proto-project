# Production Docker Compose Override
# Usage: docker-compose -f docker-compose.yaml -f docker-compose.prod.yaml up -d
# This file removes development tools and applies production-specific configurations

services:
  # Remove PHPMyAdmin from production
  phpmyadmin:
    deploy:
      replicas: 0
    profiles:
      - disabled

  # Production-specific web service overrides
  web:
    environment:
      - APP_ENV=production
      - CORS_ENABLED=true
      - AUTO_MIGRATE=true
    # Enable security hardening for production
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
      - /var/run:rw,noexec,nosuid,size=50m
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - CHOWN
      - SETGID
      - SETUID
    security_opt:
      - no-new-privileges:true
    # Re-state volumes because compose replaces arrays on override.
    volumes:
      # Code can be RO in prod (optional). If you prefer, leave as :rw.
      - .:/var/www/html:ro
      - ./infrastructure/docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
      - ./infrastructure/docker/apache-mpm.conf:/etc/apache2/conf-available/mpm-tuning.conf:ro
      # Writable uploads even with read_only root FS
      - public_files:/var/www/html/public/files:rw
      - common_files:/var/www/html/common/files:rw
    # Resource limits for production
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Production MariaDB optimizations
  mariadb:
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Production Redis optimizations
  redis:
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
