services:
  # MariaDB Database
  mariadb:
    image: mariadb:11.7.2
    container_name: proto-mariadb
    restart: unless-stopped
    environment:
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${DB_DATABASE}
      MARIADB_USER: ${DB_USERNAME}
      MARIADB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./docker/mysql/:/docker-entrypoint-initdb.d/
    networks:
      - proto-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: proto-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    volumes:
      - redis_data:/data
    networks:
      - proto-network

  # PHP Apache Web Server (Proto Backend)
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: proto-web
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
      - ./docker/apache-subdomain.conf:/etc/apache2/sites-available/000-default.conf
      # SSL Certificate volumes
      - ./certs:/etc/ssl/certs/custom
      - ./private:/etc/ssl/private/custom
    depends_on:
      - mariadb
      - redis
    networks:
      - proto-network
    environment:
      - DB_HOST=mariadb
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - APP_ENV=production

  # Certbot for Let's Encrypt certificates
  certbot:
    image: certbot/certbot
    container_name: proto-certbot
    volumes:
      - ./certs:/etc/letsencrypt
      - ./certbot-webroot:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email your-email@domain.com --agree-tos --no-eff-email -d api.yourdomain.com -d app.yourdomain.com -d crm.yourdomain.com -d dev.yourdomain.com

volumes:
  mariadb_data:
    driver: local
  redis_data:
    driver: local

networks:
  proto-network:
    driver: bridge
