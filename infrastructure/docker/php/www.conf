; Pool Configuration for PHP-FPM
; www pool - handles all web requests

[www]

; Unix user/group of processes
user = www-data
group = www-data

; The address on which to accept FastCGI requests
; For Docker, listen on TCP socket for easier debugging
; For production, consider unix socket: listen = /var/run/php-fpm.sock
listen = 127.0.0.1:9000

; Set listen(2) backlog
listen.backlog = 511

; Set permissions for unix socket (not applicable for TCP)
;listen.owner = www-data
;listen.group = www-data
;listen.mode = 0660

; List of addresses (IPv4/IPv6) of FastCGI clients which are allowed to connect
listen.allowed_clients = 127.0.0.1

; Choose how the process manager will control the number of child processes
; Options: static, dynamic, ondemand
; dynamic = children are spawned dynamically based on demand
pm = dynamic

; The number of child processes to be created (only for static pm)
pm.max_children = 50

; The number of child processes created on startup (only for dynamic pm)
pm.start_servers = 5

; The desired minimum number of idle server processes (only for dynamic pm)
pm.min_spare_servers = 5

; The desired maximum number of idle server processes (only for dynamic pm)
pm.max_spare_servers = 10

; The number of requests each child process should execute before respawning
; Useful to work around memory leaks in 3rd party libraries
pm.max_requests = 500

; The URI to view the FPM status page
pm.status_path = /fpm-status

; The ping URI to call the monitoring page of FPM
ping.path = /fpm-ping

; The timeout for serving a single request
; Should be set to same value as max_execution_time in php.ini
request_terminate_timeout = 300s

; The timeout for serving of single request after which a backtrace will be dumped
request_slowlog_timeout = 10s

; The log file for slow requests
slowlog = /proc/self/fd/2

; Set open file descriptor rlimit
rlimit_files = 1024

; Set max core size rlimit
rlimit_core = 0

; Chdir to this directory at the start
chdir = /var/www/html

; Redirect worker stdout and stderr into main error log
catch_workers_output = yes

; Decorate worker output with prefix and suffix
decorate_workers_output = no

; Clear environment in FPM workers
clear_env = no

; Pass environment variables (important for Docker)
env[HOSTNAME] = $HOSTNAME
env[PATH] = /usr/local/bin:/usr/bin:/bin
env[TMP] = /tmp
env[TMPDIR] = /tmp
env[TEMP] = /tmp

; PHP-FPM will pass these environment variables to PHP scripts
env[DB_HOST] = $DB_HOST
env[DB_PORT] = $DB_PORT
env[DB_DATABASE] = $DB_DATABASE
env[DB_USERNAME] = $DB_USERNAME
env[DB_PASSWORD] = $DB_PASSWORD
env[REDIS_HOST] = $REDIS_HOST
env[REDIS_PORT] = $REDIS_PORT
env[REDIS_PASSWORD] = $REDIS_PASSWORD
env[APP_ENV] = $APP_ENV

; Additional php.ini defines for this pool
php_admin_value[error_log] = /proc/self/fd/2
php_admin_flag[log_errors] = on

; Performance tuning
php_value[max_execution_time] = 300
php_value[max_input_time] = 300
php_value[memory_limit] = 512M
php_value[post_max_size] = 100M
php_value[upload_max_filesize] = 100M
