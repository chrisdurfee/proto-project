services:
  # MariaDB Database
  mariadb:
    image: mariadb:11.7.2
    container_name: proto-mariadb
    restart: unless-stopped
    environment:
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${DB_DATABASE}
      MARIADB_USER: ${DB_USERNAME}
      MARIADB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./mariadb/conf.d:/etc/mysql/mariadb.conf.d:ro
      - ./docker/mysql/:/docker-entrypoint-initdb.d/
    networks:
      - proto-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p$${MARIADB_ROOT_PASSWORD} || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: proto-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: ["redis-server","/usr/local/etc/redis/redis.conf"]
    networks:
      - proto-network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $${REDIS_PASSWORD} ping | grep PONG || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5

  # PHP Apache Web Server (Proto Backend)
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: proto-web
    restart: unless-stopped
  # If using Traefik reverse proxy, you generally don't need to publish 80/443 here.
  # Uncomment ONLY if running standalone without Traefik.
  # ports:
  #   - "80:80"
  #   - "443:443"
    volumes:
      - .:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
      - ./docker/apache-subdomain.conf:/etc/apache2/sites-available/000-default.conf
      # SSL Certificate volumes
      - ./certs:/etc/ssl/certs/custom
      - ./private:/etc/ssl/private/custom
    depends_on:
      - mariadb
      - redis
    networks:
      - proto-network
    environment:
      - DB_HOST=mariadb
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - APP_ENV=production
    healthcheck:
  # HTTP health endpoint check
      test: ["CMD-SHELL", "curl -fsS http://localhost/health.php >/dev/null || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    # Security hardening (adjust if it breaks write paths or logging):
    # read_only: true
    # tmpfs:
    #   - /tmp
    # cap_drop:
    #   - ALL
    # cap_add:
    #   - NET_BIND_SERVICE
    # security_opt:
    #   - no-new-privileges:true

  # Certbot for Let's Encrypt certificates
  certbot:
    image: certbot/certbot
    container_name: proto-certbot
    volumes:
      - ./certs:/etc/letsencrypt
      - ./certbot-webroot:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email your-email@domain.com --agree-tos --no-eff-email -d api.yourdomain.com -d app.yourdomain.com -d crm.yourdomain.com -d dev.yourdomain.com

volumes:
  mariadb_data:
    driver: local
  redis_data:
    driver: local

networks:
  proto-network:
    driver: bridge
